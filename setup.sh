#!/bin/sh
set -e  # D·ª´ng script n·∫øu c√≥ l·ªói

# Nh·∫≠n tham s·ªë t·ª´ d√≤ng l·ªánh
BRANCH_RN=${1:-main}
BRANCH_UN=${2:-main}

# Th∆∞ m·ª•c ch·ª©a source code React Native 
PROJECT_RN_DIR="MonkeyStories"

# Th∆∞ m·ª•c ch·ª©a source code Unity
PROJECT_UN_DIR="MonkeyStories_UN"

# URL c·ªßa repository GitHub RN
GIT_RN_REPO="git@github.com:quoctruongkt/MonkeyStories.git"

# URL c·ªßa repository GitHub UN
GIT_UN_REPO="git@github.com:HungBuiMonkey/MS_DemoUnity.git"

# Th∆∞ m·ª•c ch·ª©a script
SCRIPTS_DIR="scripts"

# ƒê∆∞·ªùng d·∫´n ƒë·∫øn Editor trong Unity
UNITY_EDITOR_DIR="$PROJECT_UN_DIR/Assets/Editor"

# ƒê∆∞·ªùng d·∫´n ƒë·∫øn c√°c file export
EXPORT_ANDROID_FILE="ExportAndroidStudio.cs"
EXPORT_IOS_FILE="ExportiOS.cs"

echo "üìå Nh√°nh React Native: $BRANCH_RN"
echo "üìå Nh√°nh Unity: $BRANCH_UN"

# Ki·ªÉm tra n·∫øu th∆∞ m·ª•c ƒë√£ t·ªìn t·∫°i th√¨ pull, n·∫øu ch∆∞a th√¨ clone
if [ -d "$PROJECT_RN_DIR" ]; then
    echo "üóëÔ∏è ƒêang reset v√† c·∫≠p nh·∫≠t $PROJECT_RN_DIR..."
    cd "$PROJECT_RN_DIR" || exit
    git reset --hard HEAD  # Lo·∫°i b·ªè to√†n b·ªô thay ƒë·ªïi c·ª•c b·ªô
    git fetch origin  # L·∫•y danh s√°ch nh√°nh m·ªõi nh·∫•t
    git checkout "$BRANCH_RN" || { echo "‚ùå Kh√¥ng t√¨m th·∫•y nh√°nh $BRANCH_RN trong $PROJECT_RN_DIR!"; exit 1; }
    git pull origin "$BRANCH_RN" || { echo "‚ùå Pull code th·∫•t b·∫°i!"; exit 1; }
    npm install
    cd ..
else
    echo "Cloning repository..."
    git clone "$GIT_RN_REPO" "$PROJECT_RN_DIR" || { echo "‚ùå Clone th·∫•t b·∫°i!"; exit 1; }
    cd "$PROJECT_RN_DIR" || exit
    npm install
    cd ..
fi

# Ki·ªÉm tra n·∫øu th∆∞ m·ª•c ƒë√£ t·ªìn t·∫°i th√¨ pull, n·∫øu ch∆∞a th√¨ clone
if [ -d "$PROJECT_UN_DIR" ]; then
    echo "üóëÔ∏è ƒêang reset v√† c·∫≠p nh·∫≠t $PROJECT_UN_DIR..."
    cd "$PROJECT_UN_DIR" || exit
    git reset --hard HEAD  # Lo·∫°i b·ªè to√†n b·ªô thay ƒë·ªïi c·ª•c b·ªô
    git fetch origin  # L·∫•y danh s√°ch nh√°nh m·ªõi nh·∫•t
    git checkout "$BRANCH_UN" || { echo "‚ùå Kh√¥ng t√¨m th·∫•y nh√°nh $BRANCH_UN trong $PROJECT_UN_DIR!"; exit 1; }
    git pull origin "$BRANCH_UN" || { echo "‚ùå Pull code Unity th·∫•t b·∫°i!"; exit 1; }
    cd ..
else
    echo "Cloning repository..."
    git clone "$GIT_UN_REPO" "$PROJECT_UN_DIR" || { echo "‚ùå Clone Unity th·∫•t b·∫°i!"; exit 1; }
fi

# T·∫°o th∆∞ m·ª•c Assets/Editor n·∫øu ch∆∞a t·ªìn t·∫°i
mkdir -p "$UNITY_EDITOR_DIR"

# Ki·ªÉm tra v√† copy file ExportAndroidStudio.cs n·∫øu ch∆∞a c√≥
if [ ! -f "$UNITY_EDITOR_DIR/$EXPORT_ANDROID_FILE" ]; then
    echo "üìÇ Kh√¥ng t√¨m th·∫•y $EXPORT_ANDROID_FILE, ƒëang copy t·ª´ $SCRIPTS_DIR..."
    cp "$SCRIPTS_DIR/$EXPORT_ANDROID_FILE" "$UNITY_EDITOR_DIR/"
    echo "‚úÖ ƒê√£ copy $EXPORT_ANDROID_FILE v√†o $UNITY_EDITOR_DIR"
fi

# Ki·ªÉm tra v√† copy file ExportiOS.cs n·∫øu ch∆∞a c√≥
if [ ! -f "$UNITY_EDITOR_DIR/$EXPORT_IOS_FILE" ]; then
    echo "üìÇ Kh√¥ng t√¨m th·∫•y $EXPORT_IOS_FILE, ƒëang copy t·ª´ $SCRIPTS_DIR..."
    cp "$SCRIPTS_DIR/$EXPORT_IOS_FILE" "$UNITY_EDITOR_DIR/"
    echo "‚úÖ ƒê√£ copy $EXPORT_IOS_FILE v√†o $UNITY_EDITOR_DIR"
fi

echo "üéâ Setup ho√†n t·∫•t!"