#!/bin/bash
set -e  # D·ª´ng script n·∫øu c√≥ l·ªói

# T·∫°o th∆∞ m·ª•c logs
mkdir -p logs && touch logs/tmp.log
LOG_FILE="logs/setup_$(date +%Y%m%d_%H%M%S).log"

# Alternative logging approach
exec > "$LOG_FILE" 2>&1


# Nh·∫≠n tham s·ªë t·ª´ d√≤ng l·ªánh
BRANCH_RN=${1:-main}
BRANCH_UN=${2:-main}

# ƒê·ªãnh nghƒ©a c√°c bi·∫øn
PROJECT_RN_DIR="MonkeyStories"
PROJECT_UN_DIR="MonkeyStories_UN"
GIT_RN_REPO="git@github.com:quoctruongkt/MonkeyStories.git"
GIT_UN_REPO="git@github.com:HungBuiMonkey/MS_DemoUnity.git"
SCRIPTS_DIR="scripts"
UNITY_EDITOR_DIR="$PROJECT_UN_DIR/Assets/Editor"
EXPORT_ANDROID_FILE="ExportAndroidStudio.cs"
EXPORT_IOS_FILE="ExportiOS.cs"

# Ki·ªÉm tra c√°c ƒëi·ªÅu ki·ªán ti√™n quy·∫øt
if [ ! -d "$SCRIPTS_DIR" ]; then
    echo "‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c scripts!"
    exit 1
fi

for file in "$SCRIPTS_DIR/$EXPORT_ANDROID_FILE" "$SCRIPTS_DIR/$EXPORT_IOS_FILE"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y file $file"
        exit 1
    fi
done

# H√†m x·ª≠ l√Ω clone/pull repository
handle_repository() {
    local dir=$1
    local repo=$2
    local branch=$3
    local name=$4

    if [ -d "$dir" ]; then
        echo "üîÑ ƒêang c·∫≠p nh·∫≠t $name repository..."
        (cd "$dir" && {
            git reset --hard HEAD
            git fetch origin || { echo "‚ùå Fetch th·∫•t b·∫°i cho $name!"; exit 1; }
            git checkout "$branch" || { echo "‚ùå Checkout th·∫•t b·∫°i cho nh√°nh $branch!"; exit 1; }
            git pull origin "$branch" || { echo "‚ùå Pull th·∫•t b·∫°i cho $name!"; exit 1; }
        })
    else
        echo "üì• ƒêang clone $name repository..."
        git clone -b "$branch" "$repo" "$dir" || { echo "‚ùå Clone th·∫•t b·∫°i cho $name!"; exit 1; }
    fi
}

echo "===================================="
echo "üöÄ B·∫Øt ƒë·∫ßu setup d·ª± √°n..."
echo "üìå Nh√°nh React Native: $BRANCH_RN"
echo "üìå Nh√°nh Unity: $BRANCH_UN"
echo "üìú Log file: $LOG_FILE"
echo "===================================="

# X·ª≠ l√Ω React Native repository
handle_repository "$PROJECT_RN_DIR" "$GIT_RN_REPO" "$BRANCH_RN" "React Native"

# C√†i ƒë·∫∑t dependencies cho React Native
if [ -d "$PROJECT_RN_DIR" ]; then
    echo "üì¶ C√†i ƒë·∫∑t dependencies cho React Native..."
    (cd "$PROJECT_RN_DIR" && {
        npm install || { echo "‚ùå npm install th·∫•t b·∫°i!"; exit 1; }
    })
fi

# X·ª≠ l√Ω Unity repository
handle_repository "$PROJECT_UN_DIR" "$GIT_UN_REPO" "$BRANCH_UN" "Unity"

# T·∫°o v√† copy c√°c file Editor
echo "üìÇ Thi·∫øt l·∫≠p Unity Editor files..."
mkdir -p "$UNITY_EDITOR_DIR"

for file in "$EXPORT_ANDROID_FILE" "$EXPORT_IOS_FILE"; do
    if [ ! -f "$UNITY_EDITOR_DIR/$file" ]; then
        echo "üìÑ Copy $file v√†o Unity Editor..."
        cp "$SCRIPTS_DIR/$file" "$UNITY_EDITOR_DIR/" || { echo "‚ùå Copy th·∫•t b·∫°i cho $file!"; exit 1; }
    fi
done

echo "===================================="
echo "‚úÖ Setup ho√†n t·∫•t!"
echo "üìÇ React Native: $PROJECT_RN_DIR (nh√°nh: $BRANCH_RN)"
echo "üìÇ Unity: $PROJECT_UN_DIR (nh√°nh: $BRANCH_UN)"
echo "üìú Log file: $LOG_FILE"
echo "===================================="